{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        //const json = await res.json()\n        setData(res.data);\n        //setLoading(false)\n      } catch (err) {\n        setError(err);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [url]);\n  const reFetch = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(url);\n      //const json = await res.json()\n      setData(res.data);\n      //setLoading(false)\n    } catch (err) {\n      setError(err);\n    }\n    setLoading(false);\n  };\n  return {\n    data,\n    loading,\n    error,\n    reFetch\n  };\n};\n_s(useFetch, \"Oicl48iGuYykLyvnN5ILs6bqZ0Y=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","loading","setLoading","error","setError","fetchData","res","fetch","err","reFetch"],"sources":["C:/Users/Kirstin Ramos/source/repos/BookingApp/BookingApp/client/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            try {\r\n                const res = await fetch(url)\r\n                //const json = await res.json()\r\n                setData(res.data)\r\n                //setLoading(false)\r\n            } catch(err){\r\n                setError(err);\r\n            }\r\n            setLoading(false)\r\n        };\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    const reFetch = async () => {\r\n        setLoading(true)\r\n        try {\r\n            const res = await fetch(url)\r\n            //const json = await res.json()\r\n            setData(res.data)\r\n            //setLoading(false)\r\n        } catch(err){\r\n            setError(err);\r\n        }\r\n        setLoading(false)\r\n    };\r\n\r\n    return { data, loading, error, reFetch };\r\n};\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QAC5B;QACAG,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;QACjB;MACJ,CAAC,CAAC,OAAMS,GAAG,EAAC;QACRJ,QAAQ,CAACI,GAAG,CAAC;MACjB;MACAN,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,MAAMY,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxBP,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;MAC5B;MACAG,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;MACjB;IACJ,CAAC,CAAC,OAAMS,GAAG,EAAC;MACRJ,QAAQ,CAACI,GAAG,CAAC;IACjB;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAAEH,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEM;EAAQ,CAAC;AAC5C,CAAC;AAACX,EAAA,CAnCIF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}